<local:MySerializableControl
    x:Class="Tempo.SearchResults"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Tempo"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    mc:Ignorable="d"
    NavigationCacheMode="Required"
    >

    <!-- This has a transparent background so that the Window Mica backdrop can shine through -->
    <Grid  x:Name="_root" >
        <Grid.RowDefinitions>
            <!-- CommandBar-->
            <RowDefinition Height="Auto"/>

            <!-- Content area -->
            <RowDefinition Height="*"/>

            <!-- Status bar -->
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <local:CommonCommandBar 
                    Visibility="{x:Bind IsRoot, Mode=OneWay}"
                    Grid.ColumnSpan="2" HorizontalAlignment="Left"
                    FilterVisibility="Visible"
                    MsdnVisibility="Visible"
                    IsExportVisible="True"
                    IsScopeVisible="True"
                    Results="{x:Bind Results, Mode=OneWay}"/>

        <!-- Wide mode view
             Code behind moves the content between here and skinny mode Grid depending on width -->
        <Grid  x:Name="_wideMode" Visibility="{x:Bind IsWide, Mode=OneWay}"  Grid.Row="1">

            <!-- A left pane with a list, a right pane with detail -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>

            <!-- SearchBox and ListView (first of two columns) -->
            <Grid x:Name="Pane0"  Grid.Row="1" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.Tag>
                    <!-- Flyout to show the Filters page -->
                    <Flyout x:Name="_filtersFlyout" LightDismissOverlayMode="On" >

                        <!-- The default width is a little too narrow -->
                        <Flyout.FlyoutPresenterStyle>
                            <Style TargetType="FlyoutPresenter">
                                <Setter Property="MaxWidth" Value="500"/>
                            </Style>
                        </Flyout.FlyoutPresenterStyle>

                        <local:Filters1 IsFlyoutMode="True" />
                    </Flyout>
                </Grid.Tag>


                <StackPanel Grid.Row="1"
                            Margin="10,15,10,20">

                    <local:SearchBox 
                        x:Name="_searchBox"
                        Grid.Row="1"
                        PlaceholderText = "Search for anything (Ctrl+E)"/>

                    <!-- If in baseline mode, show an info tip to help me remember -->
                    <StackPanel Margin="0,2,0,0" Orientation="Horizontal"
                                Visibility="{x:Bind local:Utils.VisibleIf(Settings.CompareToBaseline), Mode=OneWay}">
                        <TextBlock Text="Using baseline" FontStyle="Italic" />
                        <local:InfoTip Margin="5,2,0,0"
                                       ToolTipService.ToolTip="Only APIs new since the baseline are being shown. Update the baseline on the Home page."
                                       />
                    </StackPanel>

                </StackPanel>

                <!-- No Background here so that Mica can be seen -->
                <ListView x:Name="_listView" Grid.Row="2"
                          ItemsSource="{x:Bind Results, Mode=OneWay}"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ItemClick="ListView_ItemClick" IsItemClickEnabled="True"
                          SelectedItem="{x:Bind CurrentItem, Mode=TwoWay}"
                          SelectionMode="{x:Bind CurrentSelectionMode, Mode=OneWay}"
                          ItemContainerStyle="{StaticResource MouseListViewItemStyle}"
                          >
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="local:BaseViewModel">
                            <local:SearchResult Result="{x:Bind}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <!-- Show "Nothing found" if we're done with the search and came up empty -->
                <TextBlock Grid.Row="2"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           Visibility="{x:Bind AndNot(NothingFound, SlowSearchInProgress), Mode=OneWay}">
                    This space intentionally left blank; nothing found
                </TextBlock>

                <!-- Blur out the content area while a search is in progress -->
                <local:SmokeLayer Grid.Row="2"
                                  Visibility="{x:Bind SlowSearchInProgress, Mode=OneWay}" />
            </Grid>

            <!-- Detail area (could be a type view or a member view, second of two columns) -->
            <Grid x:Name="Pane1" Grid.Column="1" Grid.Row="1" >
                <!-- bugbug: This gives an error due to the Utils.Not, probably the combination with Visibility magic
                 "The name 'obj' does not exist in the current context"
                 Visibility="{x:Bind local:Utils.Not(NothingFound), Mode=OneWay}"  -->

                <!-- The Rows are the content and an optional doc page viewer -->
                <Grid Visibility="{x:Bind SomethingFound, Mode=OneWay}" 
                      Padding="0,16,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"/>

                        <!-- The height of the doc pane is zero if closed, otherwise calculated to be
                             a portion of the total height. But there's a grid splitter on this, so it can change -->
                        <!-- Note that this is modified by the splitter, so the two-way binding is to keep track of the current value -->
                        <RowDefinition Height="{x:Bind local:App.Instance.CalcDocPaneHeight(
                                                                local:App.Instance.DocPaneHeight, 
                                                                local:App.Instance.ShowingDocPage), 
                                                        Mode=TwoWay,
                                                        BindBack=local:App.Instance.UpdateDocPaneHeight}" />
                    </Grid.RowDefinitions>

                    <!-- Row 0 -->
                    <local:TypeOrMemberDetailView  x:Name="_detailsView" 
                                                   CornerRadius="0,0,5,5"
                                                   CanShowDocPane="False"
                                                   IsTopLevel="{x:Bind IsWide, Mode=OneWay}" />

                    <!-- Row 1 (could be collapsed) -->
                    <local:DocPageViewer Grid.Row="1"
                                         CornerRadius="5,5,0,0"
                                         Margin="0,10,0,0"
                                         VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                         Visibility="{x:Bind local:App.Instance.ShowingDocPage, Mode=OneWay}" />


                    <!-- Splitter between the metadata info and the doc page, _if_ the pane is open -->
                    <!-- This is transparent but z-ordered on top of both in order to capture the pointer -->
                    <local:GridSplitterEx Grid.Row="1"
                                          VerticalAlignment="Top"
                                          Height="16"
                                          Margin="0,-8,0,0"
                                          IsEnabled="{x:Bind local:App.Instance.ShowingDocPage, Mode=OneWay}"
                                             />

                    <!-- Button to close doc pane (only shows when it's open) -->
                    <Button Grid.Row="1"
                            Click="CloseDocPaneClick"
                            VerticalAlignment="Top"
                            Margin="0,0,10,0"
                            HorizontalAlignment="Right" >
                        <SymbolIcon Symbol="Cancel" />
                    </Button>
                </Grid>

                <local:SmokeLayer Grid.Row="2" 
                      CornerRadius="5,0,0,0"
                      Visibility="{x:Bind SlowSearchInProgress, Mode=OneWay}" />
            </Grid>

            <!-- Splitter between the search results list and the selected item detail -->
            <!-- This is transparent but z-ordered on top of both in order to capture the pointer -->
            <!-- Optimally we'd set a -8 left margin on this so that it perfectly straddles the line,
                 but doing so causes it to cover up the scroll bar of the ListView to the left -->
            <local:GridSplitterEx x:Name="_resultsSplitter" 
                                  Grid.Column="1"
                                  HorizontalAlignment="Left"
                                  Width="16"
                                  Margin="0,0,0,0"
                                  />

            <!-- Progress UI that turns on when/while search is slow -->
            <StackPanel Grid.ColumnSpan="2"
                        Background="{ThemeResource SystemControlPageBackgroundChromeMediumLowBrush}"
                        CornerRadius="5"
                        Padding="{StaticResource ContentMargin}"
                        Visibility="{x:Bind SlowSearchInProgress, Mode=OneWay}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center" >
                <TextBlock Text="Searching" HorizontalAlignment="Center" />

                <!-- bugbug: best way to stop the animation so it's not wasting battery?
                     For now, set it on IsIndeterminate -->
                <ProgressBar Height="20"
                             Width="200"
                             IsIndeterminate="{x:Bind SlowSearchInProgress, Mode=OneWay}"
                             Margin="{StaticResource ContentMargin}"/>
            </StackPanel>

        </Grid>

        <!-- Skinny mode view
             Code behind moves the content between here and skinny mode -->
        <ContentControl x:Name="_skinnyMode"
                        Grid.Row="1"
                        Visibility="{x:Bind local:Utils.CollapsedIfTrue(IsWide), Mode=OneWay}"
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        HorizontalContentAlignment="Stretch" 
                        VerticalContentAlignment="Stretch">
            <ContentControl.ContentTransitions>
                <TransitionCollection>
                    <ContentThemeTransition />
                </TransitionCollection>
            </ContentControl.ContentTransitions>
        </ContentControl>


        <local:StatusBar Grid.Row="2" VerticalAlignment="Center"
                         SlowSearchInProgress="{x:Bind SlowSearchInProgress, Mode=OneWay}"
                         SearchDelay="{x:Bind SearchDelay, Mode=OneWay}"
                         ShowingSearchResults="True" />

    </Grid>
</local:MySerializableControl>
