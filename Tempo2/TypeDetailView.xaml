<local:MySerializableControl
    x:Class="Tempo.TypeDetailView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Tempo"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource SystemControlBackgroundAltHighBrush}" 
          PointerPressed="Grid_PointerPressed" >

        <Grid.RowDefinitions>
            <!-- Command bar and heading -->
            <RowDefinition Height="Auto" />

            <!-- Content -->
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Command bar and heading -->
        <Border BorderBrush="{ThemeResource SystemControlPageBackgroundChromeMediumLowBrush}" BorderThickness="0" >
            <StackPanel>

                <!-- Show the command bar if we're the content of the Frame, or if "top level" meaning the primary content -->
                <local:CommonCommandBar 
                        IsBackEnabled="{x:Bind IsRoot, Mode=OneWay}"
                        Visibility="{x:Bind IsRoot, Mode=OneWay}"
                        MsdnVisibility="Visible"
                        MemberVM="{x:Bind TypeVM, Mode=OneWay}" />

                <!-- Padding of 12 makes this line up with a ListView left alignment -->
                <Border Padding="12,0,0,0">
                    <local:HeadingBar x:Name="_detailViewHeading"
                        Heading="{x:Bind TypeVM.PrettyName, Mode=OneWay}"
                        SubHeading="{x:Bind TypeVM.Namespace, Mode=OneWay}"
                        SubSubHeading="{x:Bind ConvertedTypeKind(TypeVM), Mode=OneWay}"
                        IsPreview="{x:Bind TypeVM.IsPreview, Mode=OneWay}"
                                  Margin="{StaticResource BottomVerticalMargin}"
                        />
                </Border>
            </StackPanel>
        </Border>

        <!-- Either wide or skinny mode displays at a time -->
        <!-- Wide mode shows two panes -->

        <controls:LayoutTransformControl Grid.Row="1">
            <controls:LayoutTransformControl.Transform>
                <ScaleTransform ScaleX="{x:Bind local:App.Instance.ContentScaling, Mode=OneWay}"
                                ScaleY="{x:Bind local:App.Instance.ContentScaling, Mode=OneWay}"/>
            </controls:LayoutTransformControl.Transform>

            <Grid Grid.Row="1" x:Name="_wideMode" RowDefinitions="*,Auto"
                  Visibility="Collapsed">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"   />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border x:Name="_wideModeCol0" Padding="0">
                    <!-- This starts out here, but in skinny mode will get moved to _skinnyModeCol0 -->
                    <local:TypeDetailViewMembersList 
                        Navigated="_membersList_Navigated"
                        x:Name="_membersList" 
                        TypeVM="{x:Bind TypeVM, Mode=OneWay}" 
                        IsSummaryDisabled="{x:Bind IsWide, Mode=OneWay}" />
                </Border>

                <Border  Grid.Column="1" 
                    CornerRadius="0,5,5,0"
                    Padding="10"
                    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

                    <Grid>
                        
                        <!-- Two rows, one for the content and one for an optional doc page view -->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"/>

                            <!-- The height of the doc pane is zero if closed, otherwise calculated to be
                             a portion of the total height. But there's a grid splitter on this, so it can change -->
                            <!-- Note that this is modified by the splitter, so the two-way binding is to keep track of the current value -->
                            <RowDefinition Height="{x:Bind TypeDetailViewCalcDocPaneHeight(
                                                                CanShowDocPane,
                                                                local:App.Instance.DocPaneHeight, 
                                                                local:App.Instance.ShowingDocPage), 
                                                        Mode=TwoWay,
                                                        BindBack=local:App.Instance.UpdateDocPaneHeight}" />
                        </Grid.RowDefinitions>

                        <!-- This starts out here, but in skinny mode will get moved to _skinnyModeCol1 -->
                        <Border x:Name="_wideModeCol1">
                            <local:TypeDetailViewTypeInfo x:Name="_typeInfo"  
                                                          TypeVM="{x:Bind TypeVM, Mode=OneWay}" />
                        </Border>
                        
                        <local:DocPageViewer Grid.Row="1"
                                             CornerRadius="5,5,0,0"
                                             Visibility="{x:Bind local:Utils.VisibleIfBoth(
                                                               CanShowDocPane,
                                                               local:App.Instance.ShowingDocPage), Mode=OneWay}"
                                             Margin="0,10,0,0"
                                             VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                             />

                        <!-- Same cell as DocPageViewer but at the top and z-ordered above -->
                        <local:GridSplitterEx Grid.Row="1"
                                              VerticalAlignment="Top"
                                              Height="16"
                                              Margin="0,-2,0,0"
                                              IsEnabled="{x:Bind local:App.Instance.ShowingDocPage, Mode=OneWay}"
                                             />
                    </Grid>

                </Border>

                <local:StatusBar Grid.Row="1" Grid.ColumnSpan="2"
                                 Visibility="{x:Bind CanShowDocPane, Mode=OneWay}"/>
            </Grid>
        </controls:LayoutTransformControl>

        <!-- Either wide or skinny mode displays at a time -->
        <!-- Skinny mode shows two tabs in a pivot -->
        <Pivot Grid.Row="1" x:Name="_skinnyMode" 
               SelectedIndex="{x:Bind SelectedPivot, Mode=TwoWay}"  >
            <PivotItem x:Name="_skinnyModeCol0"  Header="Members" >

            </PivotItem>

            <PivotItem x:Name="_skinnyModeCol1" Header="Info" >

            </PivotItem>
        </Pivot>

    </Grid>

</local:MySerializableControl>
