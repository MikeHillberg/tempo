<local:MySerializableControl
    x:Class="Tempo.HomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Tempo"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <ScrollViewer>
        <ScrollViewer.Resources>
            <!-- Hack to do a theme lookup since there's no API for it -->
            <Rectangle x:Name="SystemAccentColorShape" x:FieldModifier="public"
                       Fill="{ThemeResource SystemAccentColor}"/>
            <Rectangle x:Name="ApplicationPageBackgroundThemeBrushShape" x:FieldModifier="public"
                       Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" />
        </ScrollViewer.Resources>
        
        <Grid x:Name="_root" Background="Transparent" Padding="60" 
          PointerPressed="TeachingTipDemo_PointerPressed">

            <Grid ColumnDefinitions="Auto,*"
                  VerticalAlignment="Center" HorizontalAlignment="Center"
                  Background="{ThemeResource SystemControlPageBackgroundChromeMediumLowBrush}"
                  Padding="40"
                  CornerRadius="5"
                  ColumnSpacing="50" RowSpacing="40">
                <Grid.RowDefinitions>
                    <!-- Search box -->
                    <RowDefinition Height="Auto" />

                    <!-- Browse -->
                    <RowDefinition Height="Auto"/>

                    <!-- API scope -->
                    <RowDefinition Height="Auto" />

                    <!-- How to -->
                    <RowDefinition Height="Auto" />

                    <!-- Illustrations -->
                    <RowDefinition Height="Auto"/>

                    <!-- Baseline -->
                    <RowDefinition Height="Auto"/>

                    <!-- Theme -->
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Search box row -->
                <TextBlock Grid.Row="0" Grid.Column="0"
                           Text="Search"
                           HorizontalAlignment="Left"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           Margin="0,6,0,0"/>

                <local:SearchBox x:Name="_searchBox"  Grid.Row="0" Grid.Column="1"
                                 HorizontalAlignment="Stretch"
                                 IsAllVisible="True"
                                 PlaceholderText = "{x:Bind GetPlaceholderText(local:Manager.Settings.IsWildcardSyntax), Mode=OneWay}" />

                <!-- Browse row -->
                <TextBlock Grid.Row="1" Grid.Column="0"
                           Text="Browse"
                           HorizontalAlignment="Left"
                           Style="{StaticResource SubtitleTextBlockStyle}" />

                <StackPanel Grid.Row="1" Grid.Column="1" 
                            Margin="0,7,0,0"
                            Spacing="0"
                            HorizontalAlignment="Left">

                    <TextBlock>
                        <Hyperlink Click="ShowAll" >Show everything</Hyperlink>
                    </TextBlock>

                    <TextBlock Margin="{StaticResource VerticalMargin}">
                        <Hyperlink Click="BrowseAll" >Browse by namespace</Hyperlink>
                    </TextBlock>

                </StackPanel>

                <!-- API scope row -->
                <TextBlock Grid.Row="2" Grid.Column="0"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           HorizontalAlignment="Left"
                           >API Scope</TextBlock>

                <StackPanel Grid.Row="2" Grid.Column="1"
                            Spacing="20"
                        Orientation="Vertical">

                    <!-- bugbug: this xBind should not be this hard -->
                    <RadioButton IsChecked="{x:Bind ((local:App)local:App.Current).IsWinPlatformScope, Mode=TwoWay}" 
                                 VerticalAlignment="Top"
                                 GroupName="Test"
                                 AccessKey="W">
                        <StackPanel>
                            <TextBlock><Underline>W</Underline>indows</TextBlock>
                            <TextBlock Margin="0,10,0,0" TextWrapping="Wrap" >
                                        Search the Windows WinRT APIs installed on this machine
                            </TextBlock>
                        </StackPanel>
                    </RadioButton>

                    <RadioButton IsChecked="{x:Bind ((local:App)local:App.Current).IsWinAppScope, Mode=TwoWay}" 
                                 VerticalAlignment="Top"
                                 GroupName="Test"
                                 AccessKey="K">
                        <StackPanel>
                            <TextBlock>Windows App SD<Underline>K</Underline></TextBlock>
                            <TextBlock Margin="0,10,0,0"  TextWrapping="Wrap" >
                                        Search the Windows App SDK, downloading it from nuget.org
                            </TextBlock>
                        </StackPanel>
                    </RadioButton>

                    <!-- Custom API scope -->
                    <Grid VerticalAlignment="Top">
                        <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                                            Margin="-10"
                                            Visibility="{x:Bind IsDraggingOverCustom, Mode=OneWay}"/>

                        <RadioButton IsChecked="{x:Bind ((local:App)local:App.Current).IsCustomApiScope, Mode=TwoWay}"
                                     GroupName="Test"
                                     AccessKey="C"
                                     AllowDrop="True" 
                                     DragOver="HandleDragOver" Drop="CustomScope_Drop"
                                     DragEnter="CustomScope_DragEnter" DragLeave="CustomScope_DragLeave">
                            <StackPanel>
                                <TextBlock x:Name="_customFileLabel"><Underline>C</Underline>ustom file</TextBlock>
                                <TextBlock Margin="0,10,0,0"  TextWrapping="Wrap" >
                                    Pick DLLs/WinMDs/Nupkgs to search. Use the open button or drag a file here.
                                </TextBlock>

                                <local:UniformStackPanel Margin="0,10,0,0" 
                                                         Orientation="Horizontal"
                                                         Spacing="5">
                                    <Button Click="OpenCustomClick" HorizontalAlignment="Stretch">Open</Button>
                                    <Button Content="Close all" 
                                            Click="CloseCustomClick"
                                            HorizontalAlignment="Stretch"
                                            IsEnabled="{x:Bind local:Utils.IsntEmpty(local:DesktopManager2.CustomApiScopeFileNames.Value), Mode=OneWay}" />
                                </local:UniformStackPanel>

                                <!-- Show loaded custom filenames -->
                                <StackPanel Margin="0,5,0,0"
                                                    local:CollapseIfEmpty.IsEnabledFor="{x:Bind _customFilenamesText}">
                                    <TextBlock Text="Current:" TextWrapping="Wrap"/>
                                    <ItemsControl x:Name="_customFilenamesText"
                                                  Margin="10,0,0,0"
                                                  ItemsSource="{x:Bind SplitFilenames(local:DesktopManager2.CustomApiScopeFileNames.Value), Mode=OneWay}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate x:DataType="local:SplitFilename">
                                                <Grid ColumnDefinitions="Auto,*" ColumnSpacing="10">
                                                    <!-- Delete button (hyperlink, because an actual button is too big -->
                                                    <TextBlock>
                                                        <Hyperlink ToolTipService.ToolTip="Close this file"
                                                                   Click="RemoveCustomFile_Click"
                                                                   local:HomePage.TextElementTag="{x:Bind}"
                                                                   >[X]</Hyperlink>
                                                    </TextBlock>

                                                    <!-- Filename and path -->
                                                    <StackPanel Grid.Column="1">
                                                        <TextBlock Text="{x:Bind FilePart}" />
                                                        <TextBlock Text="{x:Bind PathPart}" />
                                                    </StackPanel>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </StackPanel>
                        </RadioButton>
                    </Grid>

                </StackPanel>

                <!-- How to row -->
                <TextBlock Grid.Row="3" Grid.Column="0"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           HorizontalAlignment="Left"
                           Margin="0">How to</TextBlock>


                <StackPanel Grid.Row="3" Grid.Column="1"
                            VerticalAlignment="Top" HorizontalAlignment="Left"
                            MaxWidth="600"
                            Margin="0,6,0,0" >

                    <TextBlock TextWrapping="Wrap">Use the search box above to search the APIs you select on the right</TextBlock>

                    <TextBlock Margin="0,12,0,0">Example search strings:</TextBlock>
                    <StackPanel Margin="15,5,0,0">
                        <TextBlock>button</TextBlock>
                        <TextBlock>button.*args</TextBlock>
                        <TextBlock>^button</TextBlock>
                        <TextBlock>button$</TextBlock>
                        <TextBlock>but::cli</TextBlock>
                        <TextBlock>button Namespace:controls</TextBlock>
                        <TextBlock>iasync&lt;storagefile</TextBlock>
                    </StackPanel>

                    <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">The search string is checked against type/property/method/event/field names.  It's also checked against parameter names and their types, against ancestors of a class, against implemented interfaces on a class, and anything else on an API that can be found.</TextBlock>

                    <StackPanel Margin="0,15,0,0" x:Name="_commandPromptText">
                        <TextBlock TextWrapping="Wrap" >You can launch the app from the command prompt too, optionally passing in filenames. You can also launch as a hyperlink. For example:</TextBlock>
                        <TextBlock TextWrapping="Wrap" IsTextSelectionEnabled="True">&gt; tempo</TextBlock>
                        <TextBlock TextWrapping="Wrap" IsTextSelectionEnabled="True">&gt; tempo MyComponent.dll</TextBlock>
                        <TextBlock TextWrapping="Wrap" IsTextSelectionEnabled="True">&gt; start "tempo:Button"</TextBlock>
                    </StackPanel>

                </StackPanel>

                <!-- Illustrations row -->
                <TextBlock Grid.Row="4" Grid.Column="0"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           HorizontalAlignment="Left"
                           >Illustrations</TextBlock>

                <StackPanel Grid.Row="4" Grid.Column="1"
                            Margin="0,5,0,0" >
                    <StackPanel >
                        <TextBlock>
                                <Hyperlink Click="TextRamp_Click">Type ramp</Hyperlink><LineBreak/>
                                <Run Text="{x:Bind local:TypeRampIllustration.Description}"/>
                        </TextBlock>
                    </StackPanel>

                    <StackPanel Margin="{StaticResource VerticalMargin}">
                        <TextBlock>
                                <Hyperlink Click="ColorSamples_Click">Colors</Hyperlink><LineBreak/>
                                <Run Text="{x:Bind local:ColorsIllustration.Description}"/>
                        </TextBlock>
                    </StackPanel>

                    <StackPanel Margin="{StaticResource VerticalMargin}">
                        <TextBlock>
                                <Hyperlink Click="SymbolsSamples_Click">Symbols</Hyperlink><LineBreak/>
                                <Run Text="{x:Bind local:SymbolsIllustration.Description}"/>
                        </TextBlock>
                    </StackPanel>
                </StackPanel>

                <!-- Baseline row -->
                <TextBlock Grid.Row="5" Grid.Column="0"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           Margin="0,5,0,0"
                           HorizontalAlignment="Left"
                           >Baseline</TextBlock>

                <Grid Grid.Row="5" Grid.Column="1">
                    <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                                            Margin="-10"
                                            Visibility="{x:Bind IsDraggingOverBaseline, Mode=OneWay}"/>

                    <!-- Set the Background to transparent so that the drag/drop hit-testing always works -->
                    <StackPanel AllowDrop="True" DragOver="HandleDragOver" Drop="Baseline_Drop"
                                DragEnter="Baseline_DragEnter" DragLeave="Baseline_DragLeave"
                                Background="Transparent">

                        <!--<TextBlock FontWeight="Bold">Baseline</TextBlock>-->
                        <TextBlock Margin="0,10" TextWrapping="Wrap">Setting a baseline lets you compare the selected set of APIs to the baseline. Use the open button or drag a file here</TextBlock>
                        <CheckBox IsThreeState="False" 
                                  IsChecked="{x:Bind Settings.CompareToBaseline, Mode=TwoWay}" 
                                  Content="Show only new compared to baseline"
                                  IsEnabled="{x:Bind local:App.Instance.IsBaselineScopeLoaded, Mode=OneWay}"/>

                        <!-- Open/Close buttons -->
                        <local:UniformStackPanel Orientation="Horizontal" Margin="0,5" Spacing="5">
                            <Button Click="OpenBaseline">Open</Button>
                            <Button Click="CloseBaseline"
                                    IsEnabled="{x:Bind local:App.Instance.IsBaselineScopeLoaded, Mode=OneWay}">Close</Button>
                        </local:UniformStackPanel>

                        <!-- Show loaded filenames -->
                        <StackPanel Margin="0,5,0,0" local:CollapseIfEmpty.IsEnabledFor="{x:Bind _baselineFilenamesText}" >
                            <TextBlock Text="Current:" TextWrapping="Wrap"/>
                            <TextBlock x:Name="_baselineFilenamesText"
                                       Text="{x:Bind FilenamesToText(local:App.Instance.BaselineFilenames), Mode=OneWay}"
                                       TextWrapping="Wrap"
                                       Margin="5,0,0,0"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>



                <!-- Row 6: theme -->
                <TextBlock Grid.Row="6" Grid.Column="0"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           Margin="0,5,0,0"
                           HorizontalAlignment="Left"
                           >Theme</TextBlock>

                <StackPanel Grid.Row="6" Grid.Column="1" >
                    <TextBlock Margin="0,10">The default theme is whatever you've set in the Settings app. Use Ctrl+Shift+T to toggle themes</TextBlock>
                    <local:UniformStackPanel Orientation="Horizontal" Margin="0,5">
                        <RadioButton IsChecked="{x:Bind local:App.Instance.IsSystemTheme, Mode=TwoWay}"
                                 Content="Default"
                                     GroupName="ThemeRadioButtons"/>
                        <RadioButton IsChecked="{x:Bind local:App.Instance.IsLightTheme, Mode=TwoWay}"
                                 Content="Light"
                                     GroupName="ThemeRadioButtons"/>
                        <RadioButton IsChecked="{x:Bind local:App.Instance.IsDarkTheme, Mode=TwoWay}"
                                 Content="Dark"
                                     GroupName="ThemeRadioButtons"/>
                    </local:UniformStackPanel>
                </StackPanel>


            </Grid>
        </Grid>
    </ScrollViewer>

</local:MySerializableControl>
