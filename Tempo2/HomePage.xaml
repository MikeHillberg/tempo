<local:MySerializableControl
    x:Class="Tempo.HomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Tempo"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="Transparent" Padding="60" 
          PointerPressed="TeachingTipDemo_PointerPressed">

        <!-- Background was: "{ThemeResource ApplicationPageBackgroundThemeBrush}" -->
        <Grid VerticalAlignment="Center"
              HorizontalAlignment="Center"
              Background="White"
              Padding="40"
              CornerRadius="5">
            <Grid.RowDefinitions>
                <!-- Search box -->
                <RowDefinition Height="Auto" />

                <!-- Tab view -->
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <local:SearchBox x:Name="_searchBox" IsAllVisible="True"                 
                             Grid.Row="0" 
                             MaxWidth="800"  />

            <Grid x:Name="_root" Grid.Row="1" Margin="50,50,50,0"  >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <ScrollViewer Grid.Row="1" Padding="0,0,10,0">
                    <Grid Margin="0,12,0,0" MaxWidth="1024" 
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                          ColumnDefinitions="3*,2*" >

                        <StackPanel>
                            <!-- bugbug:  nbsp is #160? -->
                            <TextBlock HorizontalAlignment="Left" FontWeight="Bold" TextWrapping="Wrap" >Types, Events, Methods &amp; Properties (Oh&#160;my)</TextBlock>

                            <TextBlock Margin="0,12,0,0" TextWrapping="Wrap">Use the search box above to search the APIs you select on the right</TextBlock>

                            <TextBlock Margin="0,12,0,0">Example search strings:</TextBlock>
                            <StackPanel Margin="15,5,0,0">
                                <TextBlock>button</TextBlock>
                                <TextBlock>button.*args</TextBlock>
                                <TextBlock>^button</TextBlock>
                                <TextBlock>button$</TextBlock>
                                <TextBlock>but:cli</TextBlock>
                                <TextBlock xml:space="preserve">check     box</TextBlock>
                                <TextBlock>iasync&lt;storagefile</TextBlock>
                            </StackPanel>

                            <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">The search text can be simple text or a regular expression.  Spaces are compressed out, so for example "check box" (two words) is the same as "checkbox" (one word).</TextBlock>

                            <TextBlock TextWrapping="Wrap" Margin="0,10,0,0">The search string is checked against type/property/method/event/field names.  It's also checked against parameter names and their types, against ancestors of a class, against implemented interfaces on a class, and anything else on an API that can be found.</TextBlock>

                            <StackPanel Margin="0,15,0,0" x:Name="_commandPromptText">
                                <TextBlock TextWrapping="Wrap" >You can launch the app from the command prompt too, optionally passing in filenames. You can also launch as a hyperlink. For example:</TextBlock>
                                <TextBlock TextWrapping="Wrap" IsTextSelectionEnabled="True">&gt; tempo</TextBlock>
                                <TextBlock TextWrapping="Wrap" IsTextSelectionEnabled="True">&gt; tempo MyComponent.dll</TextBlock>
                                <TextBlock TextWrapping="Wrap" IsTextSelectionEnabled="True">&gt; start "tempo:Button"</TextBlock>
                            </StackPanel>

                            <StackPanel Margin="0,20,0,0">
                                <TextBlock FontWeight="Bold">Illustrations</TextBlock>

                                <StackPanel Margin="{StaticResource VerticalMargin}">
                                    <TextBlock>
                                <Hyperlink Click="TextRamp_Click">Type ramp</Hyperlink><LineBreak/>
                                <Run Text="{x:Bind local:TypeRampIllustration.Description}"/>
                                    </TextBlock>
                                </StackPanel>

                                <StackPanel Margin="{StaticResource VerticalMargin}">
                                    <TextBlock>
                                <Hyperlink Click="ColorSamples_Click">Colors</Hyperlink><LineBreak/>
                                <Run Text="{x:Bind local:ColorsIllustration.Description}"/>
                                    </TextBlock>
                                </StackPanel>

                                <StackPanel Margin="{StaticResource VerticalMargin}">
                                    <TextBlock>
                                <Hyperlink Click="SymbolsSamples_Click">Symbols</Hyperlink><LineBreak/>
                                <Run Text="{x:Bind local:SymbolsIllustration.Description}"/>
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>

                        </StackPanel>

                        <StackPanel Grid.Column="1" Margin="50,0,0,0">
                            <TextBlock FontWeight="Bold">API Scope</TextBlock>

                            <StackPanel>
                                <!-- bugbug: this xBind should not be this hard -->
                                <RadioButton Margin="0,10,0,0"       IsChecked="{x:Bind ((local:App)local:App.Current).IsWinPlatformScope, Mode=TwoWay}" GroupName="Test">
                                    <StackPanel>
                                        <TextBlock>Windows</TextBlock>
                                        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap" >
                                        Search the Windows WinRT APIs installed on this machine
                                        </TextBlock>
                                    </StackPanel>

                                </RadioButton>

                                <RadioButton Margin="0,10,0,0"       IsChecked="{x:Bind ((local:App)local:App.Current).IsWinAppScope, Mode=TwoWay}" GroupName="Test">
                                    <StackPanel>
                                        <TextBlock >Windows App SDK</TextBlock>
                                        <TextBlock Margin="0,10,0,0"  TextWrapping="Wrap" >
                                        Search the Windows App SDK, downloading it from nuget.org
                                        </TextBlock>
                                    </StackPanel>

                                </RadioButton>

                                <!-- Custom API scope -->
                                <RadioButton Margin="0,10,0,0"       IsChecked="{x:Bind ((local:App)local:App.Current).IsCustomApiScope, Mode=TwoWay}" GroupName="Test">
                                    <StackPanel>
                                        <TextBlock x:Name="_customFileLabel">Custom file</TextBlock>
                                        <TextBlock Margin="0,10,0,0"  TextWrapping="Wrap" >
                                        Pick a nupkg or set of DLLs/WinMDs to search. Use the open button or drag a file over this window.
                                        </TextBlock>

                                        <StackPanel Margin="0,10,0,0" Orientation="Horizontal">
                                            <Button Click="OpenCustomClick">Open</Button>
                                            <Button Click="CloseCustomClick">Close</Button>
                                        </StackPanel>

                                        <!-- Show loaded custom filenames -->
                                        <StackPanel Margin="0,5,0,0"
                                                    local:CollapseIfEmpty.IsEnabledFor="{x:Bind _customFilenamesText}">
                                            <TextBlock Text="Current:" TextWrapping="Wrap"/>
                                            <TextBlock x:Name="_customFilenamesText"
                                                       Text="{x:Bind FilenamesToText(local:DesktopManager2.CustomApiScopeFileNames.Value), Mode=OneWay}"
                                                       TextWrapping="Wrap"
                                                       Margin="5,0,0,0"/>
                                        </StackPanel>
                                    </StackPanel>
                                </RadioButton>

                                <!-- Baseline APIs -->
                                <StackPanel>
                                    
                                    <!-- Horizontal line -->
                                    <local:StackListHeaderItem />
                                    
                                    <TextBlock FontWeight="Bold">Baseline</TextBlock>
                                    <TextBlock Margin="0,10" TextWrapping="Wrap">Setting a baseline lets you compare the selected set of APIs to the baseline</TextBlock>
                                    <CheckBox IsThreeState="False" IsChecked="{x:Bind Settings.CompareToBaseline, Mode=TwoWay}" 
                                              Content="Show only new compared to baseline"
                                              IsEnabled="{x:Bind local:App.Instance.IsBaselineScopeLoaded, Mode=OneWay}"/>

                                    <!-- Open/Close buttons -->
                                    <StackPanel Orientation="Horizontal" Margin="0,5">
                                        <Button Click="OpenBaseline">Open</Button>
                                        <Button Click="CloseBaseline"
                                                IsEnabled="{x:Bind local:App.Instance.IsBaselineScopeLoaded, Mode=OneWay}">Close</Button>
                                    </StackPanel>

                                    <!-- Show loaded filenames -->
                                    <StackPanel Margin="0,5,0,0" local:CollapseIfEmpty.IsEnabledFor="{x:Bind _baselineFilenamesText}" >
                                        <TextBlock Text="Current:" TextWrapping="Wrap"/>
                                        <TextBlock x:Name="_baselineFilenamesText"
                                            Text="{x:Bind FilenamesToText(local:App.Instance.BaselineFilenames), Mode=OneWay}"
                                            TextWrapping="Wrap"
                                            Margin="5,0,0,0"/>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>


                        </StackPanel>
                    </Grid>
                </ScrollViewer>
            </Grid>

        </Grid>

    </Grid>
</local:MySerializableControl>
