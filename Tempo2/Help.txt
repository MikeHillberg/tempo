

# How to search for an API

Type all or part of an API name into the search box,
either on the main/home page or on the search results page (to do a new search).

The search is case insensitive by default, and looks at:

* Type names
* Member names
* Parameter and return value names and types
* Attributes on types or members
* Other type info, such as the base type or the name of the DLL

## Using Regex

Regex syntax in the search is OK. Most useful tend to be:

* `.*` finds any number of any character
* `foo$` finds anything that _ends_ in "foo"
* `^foo` finds anything that _begins_ with "foo"

Regex examples:

* `button` finds both Button and AppBarButton, but also ContentDialog.CloseButtonClick
* `^button` finds Button and ButtonBase, but not AppBarButton (because it doesn't begin with "button")
* `button$` finds AppBarButton and Button, but not ButtonBase (because it doesn't end with "button")
* `button.*peer` finds ButtonAutomationPeer 

## Type::Member search syntax

You can search for a member of a type using "::".
For example

`button::click` finds the ButtonBase.Click event.

## Searching with Advanced Query Syntax

You can also use AQS to restrict searches, which are in the form of "Property:Value".

For example, this searches the APIs for "button", but only in a "Controls" namespace,
such as Windows.UI.Xaml.Controls:

```
button Namespace:controls
```

Note that the search term needs to be before the AQS,
for example `button Namespace:controls` rather than `Namespace:controls` button.
You can though have only AQS, for example `Namespace:controls IsType:True`.

You can combine terms with AND, OR, and NOT, or equivalently "&&", "||", and "!".
You can also wrap in parens.
If you put two terms next to each other, AND is assumed.

For example:

```
IsType:True && (Namespace:controls || Namespace:devices)
```
